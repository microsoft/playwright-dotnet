trigger: none # We don't want CI builds, just a manual release process
pool: $(PlaywrightPoolName)
parameters:
  - name: doRelease
    displayName: Push the Release to NuGet.org
    default: false
    type: boolean

  - name: signType
    displayName: Sign Type
    default: 'test'
    type: string
    values:
    - test
    - real

stages:
- stage: BuildPackageSign
  displayName: Build, Package & Sign
  jobs:
  - job: BuildPackage
    displayName: Build & Package
    steps:

    - task: MicroBuildSigningPlugin@3
      inputs:
        signType: '${{ parameters.signType }}'
        feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'
        
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/Playwright.CLI.csproj'
        arguments: '-c $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        packagesToPack: '**/Playwright.CLI.csproj'
        packDirectory: '$(Build.ArtifactStagingDirectory)/nuget'
        versioningScheme: 'off'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/nuget'
        ArtifactName: 'drop'
        publishLocation: 'Container'

    - task: MicroBuildCleanup@1

- stage: Release
  jobs:
  - job: ReleaseNuget
    displayName: Publish on Nuget.org
    condition: and(succeeded(), eq('${{parameters.doRelease}}', true))

    steps:
    - checkout: none
    - task: DownloadBuildArtifacts@1
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: NuGetCommand@2
      inputs:
        command: 'push'
        packagesToPush: '$(System.ArtifactsDirectory)/**/*.nupkg;!$(System.ArtifactsDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'NuGet-Playwright'