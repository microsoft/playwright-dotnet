name: Tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    name: ${{ matrix.product }} on ${{ matrix.os }} using .NET ${{ matrix.framework[1] }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        product: [CHROMIUM, FIREFOX, WEBKIT]
        os: [windows-latest, ubuntu-latest, macos-latest]
        framework: [[3.1.100, 'netcoreapp3.1'], [5.0.100, 'net5.0']]
    steps:
      - name: Install Media Pack
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: Install-WindowsFeature Server-Media-Foundation
      - uses: actions/checkout@v2
      - uses: microsoft/playwright-github-action@v1
      - name: Cache drivers
        uses: actions/cache@v2
        with:
          path: ./src/PlaywrightSharp/runtimes/
          key: ${{ hashFiles('./src/Common/PackageInfo.props') }}
      - name: Setup .NET Core (On Mac)
        if: ${{ matrix.os == 'macos-latest' }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.framework[0] }}
        env:
          DOTNET_INSTALL_DIR: /users/runner/alternate/dotnet
      - name: Setup .NET Core (Not on mac)
        if: ${{ matrix.os != 'macos-latest' }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.framework[0] }}
      - name: Create Certificate
        run: |
          dotnet dev-certs https --clean
          dotnet dev-certs https -ep src/PlaywrightSharp.TestServer/testCert.cer
      - name: Setup .NET Core 5 (On Mac if needed)
        if: ${{ matrix.os == 'macos-latest' && matrix.framework[0] == '3.1.100' }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100
        env:
          DOTNET_INSTALL_DIR: /users/runner/alternate/dotnet
      - name: Setup .NET Core 5 (Not on mac if needed)
        if: ${{ matrix.os != 'macos-latest' && matrix.framework[0] == '3.1.100' }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.100
      - name: Clean
        run: dotnet clean ./src/PlaywrightSharp.sln --configuration Debug && dotnet nuget locals all --clear
      - name: Run tests (!Linux)
        if: ${{ matrix.os != 'ubuntu-latest' }}
        env:
          PRODUCT: ${{ matrix.product }}
        run: |
          dotnet test ./src/PlaywrightSharp.Tests/PlaywrightSharp.Tests.csproj -c Debug -f ${{ matrix.framework[1] }} --logger "trx;LogFileName=TestResults.xml"
      - name: Run tests (Linux)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        env:
          PRODUCT: ${{ matrix.product }}
        run: |
          xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- bash -c "ulimit -c unlimited && dotnet test ./src/PlaywrightSharp.Tests/PlaywrightSharp.Tests.csproj -c Debug -f ${{ matrix.framework[1] }} --logger \"trx\""