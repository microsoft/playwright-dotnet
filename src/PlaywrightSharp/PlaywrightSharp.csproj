<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <Title>PlaywrightSharp</Title>
        <PackageId>PlaywrightSharp</PackageId>
        <Summary>Playwright-Sharp .NET library to automate Chromium, Firefox and WebKit with a single API.</Summary>
        <Description>PlaywrightSharp is a .NET library to automate Chromium, Firefox and WebKit with a single API. Playwright is built to enable cross-browser web automation that is ever-green, capable, reliable and fast.</Description>
        <TargetFrameworks>netstandard2.0;net5.0</TargetFrameworks>
        <LangVersion>9.0</LangVersion>
        <DebugType>embedded</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <DocumentationFile>bin\$(Configuration)\netstandard2.0\PlaywrightSharp.xml</DocumentationFile>
        <RunWithWarnings>true</RunWithWarnings>
        <StyleCopTreatErrorsAsWarnings>false</StyleCopTreatErrorsAsWarnings>
        <CodeAnalysisRuleSet>../PlaywrightSharp.ruleset</CodeAnalysisRuleSet>
        <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
        <RootNamespace>PlaywrightSharp</RootNamespace>
        <ReleaseVersion>0.0.0</ReleaseVersion>
        <BuildFromSource>True</BuildFromSource>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
        <NoWarn>1701;1702;CS0067</NoWarn>
    </PropertyGroup>
    <Import Project="../Common/Dependencies.props" />
    <Import Project="../Common/SignAssembly.props" />
    <Import Project="../Common/PackageInfo.props" />
    <ItemGroup>
      <PackageReference Include="Esprima" Version="1.0.1270" />
      <PackageReference Include="Microsoft.Extensions.Logging" Version="3.1.1" />
      <PackageReference Include="System.Text.Json" Version="4.7.2" />
      <PackageReference Include="Macross.Json.Extensions" Version="1.5.0" />
      <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0" PrivateAssets="All" />
      <PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="1.1.1" />
    </ItemGroup>
    <Import Project="build/netstandard2.0/PlaywrightSharp.targets" />
    <ItemGroup>
        <None Include="runtimes\osx\**" Pack="true" PackagePath="runtimes\osx\native" />
        <None Include="runtimes\unix\**" Pack="true" PackagePath="runtimes\unix\native" />
        <None Include="runtimes\win-x64\**" Pack="true" PackagePath="runtimes\win-x64\native" />
        <None Include="runtimes\win-x86\**" Pack="true" PackagePath="runtimes\win-x86\native" />
        <None Include="build\**" Pack="true" PackagePath="build" />
    </ItemGroup>
    <UsingTask TaskName="PlaywrightSharp.BuildTasks.DriverDownloader" AssemblyFile="$(MSBuildThisFileDirectory)/../tools/PlaywrightSharp.BuildTasks/$(OutDir)/PlaywrightSharp.BuildTasks.dll" />
    <Target Name="Download Drivers" AfterTargets="ResolveAssemblyReferences">
        <ConvertToAbsolutePath Paths="$(ProjectDir)..\tools\DriverDownloader\">
            <Output TaskParameter="AbsolutePaths" PropertyName="DriverDownloaderPath" />
        </ConvertToAbsolutePath>
        <ConvertToAbsolutePath Paths="$(ProjectDir)\..\..\">
            <Output TaskParameter="AbsolutePaths" PropertyName="BasePath" />
        </ConvertToAbsolutePath>
        <PlaywrightSharp.BuildTasks.DriverDownloader BasePath="$(BasePath)" DriverVersion="$(DriverVersion)" />
    </Target>
    <UsingTask TaskName="PlaywrightSharp.BuildTasks.ApiChecker" AssemblyFile="$(MSBuildThisFileDirectory)/../tools/PlaywrightSharp.BuildTasks/$(OutDir)/PlaywrightSharp.BuildTasks.dll" />
    <Target Name="Check API" AfterTargets="CopyFilesToOutputDirectory">
        <ConvertToAbsolutePath Paths="$(ProjectDir)\..\..\">
            <Output TaskParameter="AbsolutePaths" PropertyName="BasePath" />
        </ConvertToAbsolutePath>
        <PlaywrightSharp.BuildTasks.ApiChecker BasePath="$(BasePath)" TargetDir="$(TargetDir)" />
    </Target>
    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Windows'))">
        <ContentWithTargetPath Include="runtimes\win-x64\*.*">
            <TargetPath>%(Filename)%(Extension)</TargetPath>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </ContentWithTargetPath>
    </ItemGroup>
    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('OSX'))">
        <ContentWithTargetPath Include="runtimes\osx\*.*">
            <TargetPath>%(Filename)%(Extension)</TargetPath>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </ContentWithTargetPath>
    </ItemGroup>
    <ItemGroup Condition="$([MSBuild]::IsOSPlatform('Linux'))">
        <ContentWithTargetPath Include="runtimes\unix\*.*">
            <TargetPath>%(Filename)%(Extension)</TargetPath>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </ContentWithTargetPath>
    </ItemGroup>
    <ItemGroup>
      <ProjectReference Include="..\tools\PlaywrightSharp.BuildTasks\PlaywrightSharp.BuildTasks.csproj" ReferenceOutputAssembly="false" />
    </ItemGroup>
</Project>
